import express from "express";
import mongoose from "mongoose";
import cors from "cors";
import dotenv from "dotenv";

import authRoutes from "./routes/auth.routes";
import foodRoutes from "./routes/food.routes";
import categoryRoutes from "./routes/category.routes";

// üîê ENV config
dotenv.config();
const app = express();

// üü¢ App-level middleware
app.use(express.json());
app.use(cors());

// üß™ Log: Start
console.log("‚úÖ STARTING index.ts");

// üîó Routes –±“Ø—Ä—Ç–≥—ç—Ö
app.use(authRoutes);
app.use(foodRoutes);
app.use("/", categoryRoutes); // ‚úÖ —ç–Ω—ç –º”©—Ä–∏–π–≥ –±“Ø—Ä—Ç–≥—ç—Ö –ª–æ–≥ –¥–∞–≥–∞–ª–¥—É—É–ª–Ω–∞

console.log("‚úÖ Routes –±“Ø—Ä—Ç–≥—ç–ª –¥—É—É—Å–ª–∞–∞");

const PORT = 8000;
const MONGO_URI = process.env.MONGO_URI || "";

// ‚õì DB connection
mongoose.connect(MONGO_URI);

// üîå DB –Ω—ç—ç–≥–¥—ç—Ö “Ø–µ–¥
mongoose.connection.once("open", () => {
  const dbName = mongoose.connection.db?.databaseName || "(unknown)";
  console.log("‚úÖ DB connected");
  console.log("üì¶ Used DB:", dbName);

  // üöÄ Server start
  app.listen(PORT, () => {
    console.log("üöÄ Server on http://localhost:" + PORT);

    // üßæ Route path-—É—É–¥—ã–≥ list —Ö–∏–π—Ö (–¥—ç–ª–≥—ç—Ä—ç–Ω–≥“Ø–π log)
    app._router.stack.forEach((r: any) => {
      if (r.route && r.route.path) {
        console.log("üìå Registered Route:", r.route.path);
      }
    });
  });
});

// ‚ùå DB –∞–ª–¥–∞–∞ –±–∞—Ä–∏—Ö
mongoose.connection.on("error", (err) => {
  console.error("‚ùå MongoDB connection error:", err);
});
