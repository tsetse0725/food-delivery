import { Request, Response } from "express";
import { FoodOrderModel } from "../models/FoodOrder.model";
import { FoodModel } from "../models/Food.model";

/* ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ */
/* üì¶ 1. –®–∏–Ω—ç –∑–∞—Ö–∏–∞–ª–≥–∞ —Ö–∏–π—Ö (user —Ö–∏–π–¥—ç–≥)         */
/* ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ */
export const createOrder = async (req: Request, res: Response) => {
  try {
    const { userId, items, deliveryAddress } = req.body;

    // ‚ö†Ô∏è items –∑–∞–∞–≤–∞–ª –±–∞–π—Ö —ë—Å—Ç–æ–π
    if (!items || !Array.isArray(items) || items.length === 0) {
      return res.status(400).json({ error: "–ó–∞—Ö–∏–∞–ª–≥—ã–Ω —Ö–æ–æ–ª –±–∞–π—Ö–≥“Ø–π –±–∞–π–Ω–∞" });
    }

    let totalPrice = 0;
    const foodOrderItems = [];

    for (const item of items) {
      const food = await FoodModel.findById(item.foodId);
      if (!food) {
        console.warn(`Food not found with ID: ${item.foodId}`);
        continue;
      }

      totalPrice += food.price * item.quantity;
      foodOrderItems.push({
        food: item.foodId,
        quantity: item.quantity,
      });
    }

    const shippingFee = parseFloat(process.env.SHIPPING_FEE || "0");
    const total = totalPrice + shippingFee;

    const newOrder = await FoodOrderModel.create({
      user: userId,
      totalPrice: total,
      deliveryAddress,
      foodOrderItems,
      status: "PENDING",
    });

    res.status(201).json(newOrder);
  } catch (error) {
    console.error("–ó–∞—Ö–∏–∞–ª–≥–∞ —Ö–∏–π—Ö—ç–¥ –∞–ª–¥–∞–∞:", error);
    res.status(500).json({ error: "–ó–∞—Ö–∏–∞–ª–≥–∞ –∞–º–∂–∏–ª—Ç–≥“Ø–π –±–æ–ª–ª–æ–æ" });
  }
};

/* ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ */
/* üì• 2. –•—ç—Ä—ç–≥–ª—ç–≥—á–∏–π–Ω –±“Ø—Ö –∑–∞—Ö–∏–∞–ª–≥–∞ –∞–≤–∞—Ö           */
/* ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ */
export const getOrdersByUser = async (req: Request, res: Response) => {
  try {
    const userId = req.params.userId;

    const orders = await FoodOrderModel.find({ user: userId })
      .populate("foodOrderItems.food")
      .sort({ createdAt: -1 })
      .lean();

    res.status(200).json(orders);
  } catch (error) {
    console.error("–ó–∞—Ö–∏–∞–ª–≥—É—É–¥—ã–≥ –∞–≤–∞—Ö–∞–¥ –∞–ª–¥–∞–∞:", error);
    res.status(500).json({ error: "–ó–∞—Ö–∏–∞–ª–≥—É—É–¥—ã–≥ —É–Ω—à–∏–∂ —á–∞–¥—Å–∞–Ω–≥“Ø–π" });
  }
};

/* ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ */
/* üîì 3. –ë“Ø—Ö –∑–∞—Ö–∏–∞–ª–≥—ã–≥ –∞–≤–∞—Ö (admin-–¥ –∑–æ—Ä–∏—É–ª–∞–≤)     */
/* ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ */
export const getAllOrders = async (_req: Request, res: Response) => {
  try {
    const orders = await FoodOrderModel.find()
      .populate("foodOrderItems.food")
      .populate("user", "email")
      .sort({ createdAt: -1 })
      .lean();

    res.status(200).json(orders);
  } catch (error) {
    console.error("–ë“Ø—Ö –∑–∞—Ö–∏–∞–ª–≥–∞ –∞–≤–∞—Ö–∞–¥ –∞–ª–¥–∞–∞:", error);
    res.status(500).json({ error: "–ó–∞—Ö–∏–∞–ª–≥—É—É–¥—ã–≥ —Ç–∞—Ç–∞–∂ —á–∞–¥—Å–∞–Ω–≥“Ø–π" });
  }
};

/* ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ */
/* üîÑ 4. –ó–∞—Ö–∏–∞–ª–≥—ã–Ω —Ç”©–ª”©–≤ —à–∏–Ω—ç—á–ª—ç—Ö (admin)         */
/* ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ */
export const updateOrderStatus = async (req: Request, res: Response) => {
  try {
    const orderId = req.params.id;
    const status = req.body.status?.toUpperCase();

    if (!["PENDING", "CANCELED", "DELIVERED"].includes(status)) {
      return res.status(400).json({ error: "–ë—É—Ä—É—É —Ç”©–ª”©–≤ –±–∞–π–Ω–∞" });
    }

    const updated = await FoodOrderModel.findByIdAndUpdate(
      orderId,
      { status },
      { new: true }
    );

    if (!updated) {
      return res.status(404).json({ error: "–ó–∞—Ö–∏–∞–ª–≥–∞ –æ–ª–¥—Å–æ–Ω–≥“Ø–π" });
    }

    res.status(200).json(updated);
  } catch (error) {
    console.error("–¢”©–ª”©–≤ —à–∏–Ω—ç—á–ª—ç—Ö—ç–¥ –∞–ª–¥–∞–∞:", error);
    res.status(500).json({ error: "–¢”©–ª”©–≤ —à–∏–Ω—ç—á–ª—ç—Ö—ç–¥ –∞–ª–¥–∞–∞ –≥–∞—Ä–ª–∞–∞" });
  }
};
